const path = require("path");
const multer = require("multer");
const db = require("./model");

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è `multer` –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ
const storage = multer.diskStorage({
  destination: "uploads/",
  filename: (req, file, cb) => {
    cb(null, Date.now() + path.extname(file.originalname));
  },
});
const upload = multer({ storage }).array("images", 5);

// üìå –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç
exports.createPost = async (req, res) => {
  try {
    const { title, description, content } = req.body;
    const postId = await db.createPost(title, description, content);
    res.json({ message: "‚úÖ –ü–æ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ!", postId });
  } catch (error) {
    res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç–∞", details: error.message });
  }
};

// üìå –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ—Ç–æ
exports.uploadImages = async (req, res) => {
  upload(req, res, async (err) => {
    if (err) return res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ" });

    const postId = req.params.post_id;
    const images = req.files.map((file) => `/uploads/${file.filename}`);

    try {
      await db.saveImages(postId, images);
      res.json({ message: "‚úÖ –§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!", images });
    } catch (error) {
      res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ", details: error.message });
    }
  });
};

// üìå –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Å—Ç —É –≤–∏–≥–ª—è–¥—ñ HTML
exports.getPostHtml = async (req, res) => {
  try {
    const post = await db.getPost(req.params.id);
    if (!post) return res.status(404).send("‚ùå –ü–æ—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");

    const images = await db.getPostImages(req.params.id);
    res.render("post", { post, images });
  } catch (error) {
    res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Å—Ç–∞", details: error.message });
  }
};
